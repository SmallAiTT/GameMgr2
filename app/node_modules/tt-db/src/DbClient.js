var dbUtils = require("./dbUtils");
module.exports = function(pool){
    var _pool = pool;
    this.query = function(sql, args, cb){
        var arr = Array.apply(null, arguments);
        var cb = arr.pop();
        _pool.acquire(function(err, client){
            if(err) return cb(err);
            arr.push(function(err, results){
                _pool.release(client);
                err ? cb(err) : cb(null, results);
            })
            client.query.apply(client, arr);
        });
    };


    this.create = function(poClass, args, cb){
        var tableName = typeof poClass == "string" ? poClass : poClass.tableName;
        var sqlStr = "insert into " + tableName + " set ? ";
        this.query(sqlStr, args, function(err, result){
            err ? cb(err, null) : cb(null, result);
        });
    };
    this.update = function(poClass, values, cnd, args, cb){
        var tableName = typeof poClass == "string" ? poClass : poClass.tableName;
        var cnd = dbUtils.getCnd.apply(this, Array.prototype.slice.call(arguments, 2));
        var cols = "";
        var tempArr = [];
        for (var key in values) {
            cols += key + " = ?,"
            tempArr.push(values[key]);
        }
        cols = cols.substring(0, cols.length - 1);//去除最有一个逗号
        var sqlStr = "update " + tableName + " set " + cols + cnd.where;
        this.query(sqlStr, tempArr.concat(cnd.args), function (err, result) {
            err ? cnd.cb(err, null) : cnd.cb(null, result);
        });
    };
    this.read = function(poClass, cnd, args, cb){
        var tableName = typeof poClass == "string" ? poClass : poClass.tableName;
        var cnd = dbUtils.getCnd.apply(this, Array.prototype.slice.call(arguments, 1));
        var strSql = "select * from " + tableName + cnd.where;
        this.query(strSql, cnd.args, function (err, result) {
            err ? cnd.cb(err, null) : cnd.cb(null, result.length > 0 ? result[0] : null);
        });
    };
    this.del = function(poClass, cnd, args, cb){
        var tableName = typeof poClass == "string" ? poClass : poClass.tableName;
        var cnd = dbUtils.getCnd.apply(this, Array.prototype.slice.call(arguments, 1));
        var sql = "delete from " + tableName + cnd.where;
        this.query(sql, cnd.args || [], function (err, result) {
            err ? cnd.cb(err, null) : cnd.cb(null, result);
        });
    };
    this.list = function(poClass, cnd, args, cb){
        var tableName = typeof poClass == "string" ? poClass : poClass.tableName;
        var cnd = dbUtils.getCnd.apply(this, Array.prototype.slice.call(arguments, 1));
        var strSql = "select * from	" + tableName + cnd.where;
        this.query(strSql, cnd.args, function (err, result) {
            err ? cnd.cb(err, null) : cnd.cb(null, result);
        });
    };
    this.listPage = function(poClass, cnd, args, cb){};
};


