var ttUtils = require("tt-utils");
var PvlPo = require("../po/PvlPo");
var ctrlConst = require("../cfg/ctrlConst");
var ctrlUrl = ctrlConst.pvl;
var gmDao = require("tt-db").gmDao;
var mysql = require('mysql');
var client = mysql.createConnection({ //Use `mysql.createClient` in older versions of node-mysql
    database : "gm",
    user: 'gm',
    password: 'gm'
});
//Enable mysql-queues
var queues = require('mysql-queues');
const DEBUG = true;
queues(client, DEBUG);

module.exports = function(app){
    app.post(ctrlUrl.create, function(req, res){
        ttUtils.createPoByCtrl(req, res, gmDao, PvlPo);
    });
    app.post(ctrlUrl.update, function(req, res){
        var po = ttUtils.transReq(req, PvlPo);
        gmDao.update(PvlPo, po, {id : po.id}, function(err, result){
            err ? ttUtils.doErr(res, err) : ttUtils.doInfo(res, null, result);
        });
    });
    app.post(ctrlUrl.read, function(req, res){
        gmDao.read(PvlPo, {id : req.body.id}, function(err, result){
            err ? ttUtils.doErr(res, err) : ttUtils.doInfo(res, null, result);
        });
    });
    app.post(ctrlUrl.del, function(req, res){
        gmDao.del(PvlPo, {id : req.body.id}, function(err, result){
            err ? ttUtils.doErr(res, err) : ttUtils.doInfo(res, null, result);
        });
    });
    app.post(ctrlUrl.list, function(req, res){
        gmDao.list(PvlPo, function(err, result){
            err ?  ttUtils.doErr(res, err) : ttUtils.doInfo(res, null, {rows : result, total : result.length});
        });
    });

};
